#!/usr/bin/env python3
import sys
from struct import unpack

# Replace this with the raw hex you logged for DATA_TRACKER 2 payload
hexstr = (
  "00000c0000000000000000000000000001000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c000000000000000000000000000300588000000c000000000000000000dafa334401000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c000000000000000000000000000400588000000c0000000000000000004dff334401000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c000000000000000000000000000500588000000c00000000000000000042ff334401000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c000000000000000000000000000600588000000c0000000000000000004dff334401000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c000000000000000000000000000700588000000c0000000000000000004dff334401000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c000000000000000000000000000800588000000c00000000000000000093fe334401000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c000000000000000000000000000900588000000c00000000000000000093fe334401000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c000000000000000000000000000a00588000000c000000000000000000b0fd334401000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c000000000000000000000000000b00588000000c0000000000000000000000000001000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c000000000000000000000000000c00588000000c0000000000000000000000000001000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c00000000000000000000000000"
  "00000c000000000000000000dafa334401000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c000000000000000000000000000400588000000c0000000000000000004dff334401000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c000000000000000000000000000500588000000c00000000000000000042ff334401000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c000000000000000000000000000600588000000c0000000000000000004dff334401000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c000000000000000000000000000700588000000c0000000000000000004dff334401000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c000000000000000000000000000800588000000c00000000000000000093fe334401000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c000000000000000000000000000900588000000c00000000000000000093fe334401000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c000000000000000000000000000a00588000000c000000000000000000b0fd334401000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c000000000000000000000000000b00588000000c0000000000000000000000000001000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c000000000000000000000000000c00588000000c0000000000000000000000000001000c0000000000000000000000000002000c00000000000000000000000000030004000000803f04000c0000000000000000000000000005000c00000000000000000000000000"
  # ... etc, the entire 0000… hex
)

buf = bytes.fromhex(hexstr)
off = 0
trackers = {}

print(f"Total bytes: {len(buf)}\n")

while off + 4 <= len(buf):
    # Read the PSN_DATA_TRACKER wrapper header (ID | length)
    idWord, lenWord = unpack('<HH', buf[off:off+4])
    trackerId = idWord & 0x7fff
    print(f"Tracker ID = {trackerId}, Length = {lenWord} bytes")
    off += 4

    subOff = off
    end = off + lenWord
    while subOff + 4 <= end:
        # Read each sub‑chunk header
        subId, subLen = unpack('<HH', buf[subOff:subOff+4])
        data = buf[subOff+4:subOff+4+subLen]
        print(f"  • Sub‑chunk 0x{subId:04X}, {subLen} bytes → raw: {data.hex()}")

        # If it’s one of the XYZ floats, unpack them:
        if subId in (0x0000, 0x0001, 0x0002, 0x0004, 0x0005):
            # 3‑floats for POS, SPEED, ORI, ACCEL, TRGTPOS
            if subLen == 12:
                x,y,z = unpack('<fff', data)
                print(f"    → Parsed ({['POS','SPD','ORI','ACL','TGP'][subId]}): x={x}, y={y}, z={z}")
        elif subId == 0x0003:
            # STATUS (single float)
            (stat,) = unpack('<f', data)
            print(f"    → Parsed STATUS: {stat}")
        elif subId == 0x0006:
            # Tracker timestamp (uint64)
            (tt,) = unpack('<Q', data)
            print(f"    → Parsed Tracker TS: {tt}")
        subOff += 4 + subLen

    off = end
    print()

# Done
